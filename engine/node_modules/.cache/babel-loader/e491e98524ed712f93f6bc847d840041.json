{"ast":null,"code":"import _slicedToArray from \"/Users/mac/Desktop/oxo/engine/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mac/Desktop/oxo/engine/src/Pages/Database/Table.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport MUIDataTable from \"mui-datatables\";\nimport { loadDatabase } from \"./Redux/actions\";\nimport { useHistory } from \"react-router-dom\";\nimport { useAuth0 } from \"../../App/react-auth0-spa\";\n\nfunction Table(props) {\n  let history = useHistory();\n\n  const _useAuth = useAuth0(),\n        getTokenSilently = _useAuth.getTokenSilently;\n\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        token = _useState2[0],\n        setToken = _useState2[1];\n\n  const urlIndex = props.location.pathname.lastIndexOf(\"/\") + 1;\n  const currentTable = props.location.pathname.slice(urlIndex);\n  useEffect(() => {\n    const fetchDatabaseList = async () => {\n      const newToken = await getTokenSilently();\n      setToken(newToken);\n      props.dispatchLoadDatabase(newToken, currentTable, \"1\", \"25\");\n    };\n\n    fetchDatabaseList();\n  }, []);\n\n  const populateTable = () => {\n    switch (currentTable) {\n      case \"connection\":\n        return React.createElement(MUIDataTable, {\n          title: \"Drivers\",\n          data: props.driverMatches,\n          columns: driverColumns,\n          options: driverTableOptions,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        });\n\n      case \"driver\":\n      case \"match\":\n      case \"owner\":\n      case \"vehicle\":\n      case \"waitlist\":\n      default:\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  });\n}\n\nconst mapStateToProps = state => {\n  return {\n    databaseEntries: state.database.data\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatchLoadDatabase: (token, tableName, page, pageSize) => dispatch(loadDatabase(token, tableName, page, pageSize))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);","map":{"version":3,"sources":["/Users/mac/Desktop/oxo/engine/src/Pages/Database/Table.tsx"],"names":["React","useState","useEffect","connect","MUIDataTable","loadDatabase","useHistory","useAuth0","Table","props","history","getTokenSilently","token","setToken","urlIndex","location","pathname","lastIndexOf","currentTable","slice","fetchDatabaseList","newToken","dispatchLoadDatabase","populateTable","driverMatches","driverColumns","driverTableOptions","mapStateToProps","state","databaseEntries","database","data","mapDispatchToProps","dispatch","tableName","page","pageSize"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,YAAP,MAAkD,gBAAlD;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,QAAT,QAAyB,2BAAzB;;AAYA,SAASC,KAAT,CAAeC,KAAf,EAAsD;AAClD,MAAIC,OAAO,GAAGJ,UAAU,EAAxB;;AADkD,mBAErBC,QAAQ,EAFa;AAAA,QAE1CI,gBAF0C,YAE1CA,gBAF0C;;AAAA,oBAGxBV,QAAQ,EAHgB;AAAA;AAAA,QAG3CW,KAH2C;AAAA,QAGpCC,QAHoC;;AAIlD,QAAMC,QAAQ,GAAGL,KAAK,CAACM,QAAN,CAAeC,QAAf,CAAwBC,WAAxB,CAAoC,GAApC,IAA2C,CAA5D;AACA,QAAMC,YAAY,GAAGT,KAAK,CAACM,QAAN,CAAeC,QAAf,CAAwBG,KAAxB,CAA8BL,QAA9B,CAArB;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMkB,iBAAiB,GAAG,YAAY;AAClC,YAAMC,QAAQ,GAAG,MAAMV,gBAAgB,EAAvC;AACAE,MAAAA,QAAQ,CAACQ,QAAD,CAAR;AAEAZ,MAAAA,KAAK,CAACa,oBAAN,CAA2BD,QAA3B,EAAqCH,YAArC,EAAmD,GAAnD,EAAwD,IAAxD;AACH,KALD;;AAMAE,IAAAA,iBAAiB;AACpB,GARQ,EAQN,EARM,CAAT;;AAUA,QAAMG,aAAa,GAAG,MAAM;AACxB,YAAQL,YAAR;AACI,WAAK,YAAL;AACI,eACI,oBAAC,YAAD;AACI,UAAA,KAAK,EAAE,SADX;AAEI,UAAA,IAAI,EAAET,KAAK,CAACe,aAFhB;AAGI,UAAA,OAAO,EAAEC,aAHb;AAII,UAAA,OAAO,EAAEC,kBAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;;AAQJ,WAAK,QAAL;AACA,WAAK,OAAL;AACA,WAAK,OAAL;AACA,WAAK,SAAL;AACA,WAAK,UAAL;AACA;AAfJ;AAiBH,GAlBD;;AAsBA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAKH;;AAED,MAAMC,eAAe,GAAIC,KAAD,IAAgB;AACpC,SAAO;AACHC,IAAAA,eAAe,EAAED,KAAK,CAACE,QAAN,CAAeC;AAD7B,GAAP;AAGH,CAJD;;AAMA,MAAMC,kBAAkB,GAAIC,QAAD,IAAmB;AAC1C,SAAO;AACHX,IAAAA,oBAAoB,EAAE,CAACV,KAAD,EAAgBsB,SAAhB,EAAmCC,IAAnC,EAAiDC,QAAjD,KAAsEH,QAAQ,CAAC5B,YAAY,CAACO,KAAD,EAAQsB,SAAR,EAAmBC,IAAnB,EAAyBC,QAAzB,CAAb;AADjG,GAAP;AAGH,CAJD;;AAMA,eAAejC,OAAO,CAClBwB,eADkB,EAElBK,kBAFkB,CAAP,CAGbxB,KAHa,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport MUIDataTable, { MUIDataTableOptions } from \"mui-datatables\";\nimport { loadDatabase } from \"./Redux/actions\";\nimport { useHistory } from \"react-router-dom\";\nimport { useAuth0 } from \"../../App/react-auth0-spa\";\nimport { Switch } from \"@material-ui/core\";\n\ninterface TableProps {\n    // uniqueColumns: any[];\n    // databaseList: any[];\n    databaseEntries: any[];\n    // dispatchDatabaseList: any;\n    dispatchLoadDatabase: any;\n    location: any;\n}\n\nfunction Table(props: TableProps): React.ReactElement {\n    let history = useHistory();\n    const { getTokenSilently } = useAuth0();\n    const [token, setToken] = useState();\n    const urlIndex = props.location.pathname.lastIndexOf(\"/\") + 1;\n    const currentTable = props.location.pathname.slice(urlIndex);\n\n    useEffect(() => {\n        const fetchDatabaseList = async () => {\n            const newToken = await getTokenSilently();\n            setToken(newToken);\n\n            props.dispatchLoadDatabase(newToken, currentTable, \"1\", \"25\");\n        };\n        fetchDatabaseList();\n    }, []);\n\n    const populateTable = () => {\n        switch (currentTable) {\n            case \"connection\":\n                return (\n                    <MUIDataTable\n                        title={\"Drivers\"}\n                        data={props.driverMatches}\n                        columns={driverColumns}\n                        options={driverTableOptions}\n                    />\n                )\n            case \"driver\":\n            case \"match\":\n            case \"owner\":\n            case \"vehicle\":\n            case \"waitlist\":\n            default:\n        }\n    }\n\n\n\n    return (\n        <div>\n\n        </div>\n    )\n}\n\nconst mapStateToProps = (state: any) => {\n    return {\n        databaseEntries: state.database.data\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        dispatchLoadDatabase: (token: string, tableName: string, page: string, pageSize: string) => dispatch(loadDatabase(token, tableName, page, pageSize))\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Table);"]},"metadata":{},"sourceType":"module"}