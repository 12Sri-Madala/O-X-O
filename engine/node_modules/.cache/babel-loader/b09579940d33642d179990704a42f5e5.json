{"ast":null,"code":"import { LOAD_DATABASE_LIST_SUCCESS, LOAD_DATABASE_LIST_FAILURE } from \"./actionTypes\";\nexport function getDatabaseList(token) {\n  console.log(\"what is the token: \", token);\n  return dispatch => {\n    try {\n      fetch(\"/\", {\n        headers: {\n          Authorization: \"Bearer \" + token\n        }\n      }).then(response => response.json()).then(responseJson => {\n        console.log(\"what is the responseJson:\", responseJson);\n\n        if (responseJson.success) {\n          dispatch(getDatabaseListSuccess(responseJson));\n        } else {\n          dispatch(getDatabaseListError(responseJson.error));\n        }\n      }).catch(error => console.log(\"Error getting the list of databases: \", error));\n    } catch (error) {\n      dispatch(getDatabaseListError(error));\n    }\n  };\n}\n\nfunction getDatabaseListSuccess(obj) {\n  return {\n    type: LOAD_DATABASE_LIST_SUCCESS,\n    payload: obj.payload\n  };\n}\n\nfunction getDatabaseListError(err) {\n  return {\n    type: LOAD_DATABASE_LIST_FAILURE,\n    payload: err\n  };\n}","map":{"version":3,"sources":["/Users/mac/Desktop/oxo/engine/src/Pages/Database/Redux/actions.ts"],"names":["LOAD_DATABASE_LIST_SUCCESS","LOAD_DATABASE_LIST_FAILURE","getDatabaseList","token","console","log","dispatch","fetch","headers","Authorization","then","response","json","responseJson","success","getDatabaseListSuccess","getDatabaseListError","error","catch","obj","type","payload","err"],"mappings":"AAAA,SACIA,0BADJ,EAEIC,0BAFJ,QAGO,eAHP;AAKA,OAAO,SAASC,eAAT,CAAyBC,KAAzB,EAAwC;AAC3CC,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAnC;AACA,SAAQG,QAAD,IAAmB;AACtB,QAAI;AACAC,MAAAA,KAAK,MAAM;AACPC,QAAAA,OAAO,EAAE;AACLC,UAAAA,aAAa,EAAE,YAAYN;AADtB;AADF,OAAN,CAAL,CAKKO,IALL,CAKUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EALtB,EAMKF,IANL,CAMUG,YAAY,IAAI;AAClBT,QAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCQ,YAAzC;;AACA,YAAIA,YAAY,CAACC,OAAjB,EAA0B;AACtBR,UAAAA,QAAQ,CAACS,sBAAsB,CAACF,YAAD,CAAvB,CAAR;AACH,SAFD,MAEO;AACHP,UAAAA,QAAQ,CAACU,oBAAoB,CAACH,YAAY,CAACI,KAAd,CAArB,CAAR;AACH;AACJ,OAbL,EAcKC,KAdL,CAcWD,KAAK,IAAIb,OAAO,CAACC,GAAR,CAAY,uCAAZ,EAAqDY,KAArD,CAdpB;AAeH,KAhBD,CAgBE,OAAOA,KAAP,EAAc;AACZX,MAAAA,QAAQ,CAACU,oBAAoB,CAACC,KAAD,CAArB,CAAR;AACH;AACJ,GApBD;AAqBH;;AAED,SAASF,sBAAT,CAAgCI,GAAhC,EAA0C;AACtC,SAAO;AACHC,IAAAA,IAAI,EAAEpB,0BADH;AAEHqB,IAAAA,OAAO,EAAEF,GAAG,CAACE;AAFV,GAAP;AAIH;;AAED,SAASL,oBAAT,CAA8BM,GAA9B,EAAwC;AACpC,SAAO;AACHF,IAAAA,IAAI,EAAEnB,0BADH;AAEHoB,IAAAA,OAAO,EAAEC;AAFN,GAAP;AAIH","sourcesContent":["import {\n    LOAD_DATABASE_LIST_SUCCESS,\n    LOAD_DATABASE_LIST_FAILURE\n} from \"./actionTypes\"\n\nexport function getDatabaseList(token: string) {\n    console.log(\"what is the token: \", token)\n    return (dispatch: any) => {\n        try {\n            fetch(`/`, {\n                headers: {\n                    Authorization: \"Bearer \" + token\n                }\n            })\n                .then(response => response.json())\n                .then(responseJson => {\n                    console.log(\"what is the responseJson:\", responseJson)\n                    if (responseJson.success) {\n                        dispatch(getDatabaseListSuccess(responseJson));\n                    } else {\n                        dispatch(getDatabaseListError(responseJson.error));\n                    }\n                })\n                .catch(error => console.log(\"Error getting the list of databases: \", error));\n        } catch (error) {\n            dispatch(getDatabaseListError(error));\n        }\n    }\n}\n\nfunction getDatabaseListSuccess(obj: any) {\n    return {\n        type: LOAD_DATABASE_LIST_SUCCESS,\n        payload: obj.payload\n    }\n}\n\nfunction getDatabaseListError(err: any) {\n    return {\n        type: LOAD_DATABASE_LIST_FAILURE,\n        payload: err\n    }\n}"]},"metadata":{},"sourceType":"module"}