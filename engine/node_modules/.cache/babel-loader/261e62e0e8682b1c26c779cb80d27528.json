{"ast":null,"code":"import _defineProperty from \"/Users/mac/Desktop/oxo/engine/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { LOAD_DATABASE_LIST_SUCCESS, LOAD_DATABASE_LIST_FAILURE, LOAD_DATABASE_DATA_SUCCESS, LOAD_DATABASE_DATA_FAILURE } from \"./actionTypes\";\nconst initialState = {\n  databaseList: []\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case LOAD_DATABASE_LIST_SUCCESS:\n      console.log(\"Fetch database list success\");\n      return _objectSpread({}, state, {\n        databaseList: action.payload\n      });\n\n    case LOAD_DATABASE_LIST_FAILURE:\n      console.log(\"Fetch database list failure\");\n      return _objectSpread({}, state, {\n        error: action.payload\n      });\n\n    case LOAD_DATABASE_DATA_SUCCESS:\n      console.log(\"get Database data success\");\n      return _objectSpread({}, state, {\n        databaseEntries: action.payload\n      });\n\n    case LOAD_DATABASE_DATA_FAILURE:\n      console.log(\"get Database data failure\");\n      return _objectSpread({}, state, {\n        error: action.payload\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/mac/Desktop/oxo/engine/src/Pages/Database/Redux/DatabaseListReducer.tsx"],"names":["LOAD_DATABASE_LIST_SUCCESS","LOAD_DATABASE_LIST_FAILURE","LOAD_DATABASE_DATA_SUCCESS","LOAD_DATABASE_DATA_FAILURE","initialState","databaseList","state","action","type","console","log","payload","error","databaseEntries"],"mappings":";;;;;;AAAA,SACIA,0BADJ,EAEIC,0BAFJ,EAGIC,0BAHJ,EAIIC,0BAJJ,QAKO,eALP;AAOA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,YAAY,EAAE;AADG,CAArB;AAIA,eAAe,UAAUC,KAAK,GAAGF,YAAlB,EAAgCG,MAAhC,EAA6C;AACxD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKR,0BAAL;AACIS,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACA,+BACOJ,KADP;AAEID,QAAAA,YAAY,EAAEE,MAAM,CAACI;AAFzB;;AAIJ,SAAKV,0BAAL;AACIQ,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACA,+BACOJ,KADP;AAEIM,QAAAA,KAAK,EAAEL,MAAM,CAACI;AAFlB;;AAIJ,SAAKT,0BAAL;AACIO,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACA,+BACOJ,KADP;AAEIO,QAAAA,eAAe,EAAEN,MAAM,CAACI;AAF5B;;AAIJ,SAAKR,0BAAL;AACIM,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACA,+BACOJ,KADP;AAEIM,QAAAA,KAAK,EAAEL,MAAM,CAACI;AAFlB;;AAIJ;AACI,aAAOL,KAAP;AA1BR;AA4BH","sourcesContent":["import {\n    LOAD_DATABASE_LIST_SUCCESS,\n    LOAD_DATABASE_LIST_FAILURE,\n    LOAD_DATABASE_DATA_SUCCESS,\n    LOAD_DATABASE_DATA_FAILURE\n} from \"./actionTypes\";\n\nconst initialState = {\n    databaseList: []\n};\n\nexport default function (state = initialState, action: any) {\n    switch (action.type) {\n        case LOAD_DATABASE_LIST_SUCCESS:\n            console.log(\"Fetch database list success\")\n            return {\n                ...state,\n                databaseList: action.payload\n            };\n        case LOAD_DATABASE_LIST_FAILURE:\n            console.log(\"Fetch database list failure\")\n            return {\n                ...state,\n                error: action.payload\n            };\n        case LOAD_DATABASE_DATA_SUCCESS:\n            console.log(\"get Database data success\");\n            return {\n                ...state,\n                databaseEntries: action.payload\n            };\n        case LOAD_DATABASE_DATA_FAILURE:\n            console.log(\"get Database data failure\");\n            return {\n                ...state,\n                error: action.payload\n            }\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}