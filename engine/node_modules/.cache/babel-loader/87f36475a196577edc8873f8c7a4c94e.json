{"ast":null,"code":"import _objectWithoutProperties from \"/Users/mac/Desktop/oxo/engine/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/mac/Desktop/oxo/engine/src/Navigation/PrivateRoute.tsx\";\nimport React, { useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { useAuth0 } from \"../App/react-auth0-spa\";\n\nconst PrivateRoute = (_ref) => {\n  let Component = _ref.component,\n      path = _ref.path,\n      rest = _objectWithoutProperties(_ref, [\"component\", \"path\"]);\n\n  const _useAuth = useAuth0(),\n        loading = _useAuth.loading,\n        isAuthenticated = _useAuth.isAuthenticated,\n        loginWithRedirect = _useAuth.loginWithRedirect;\n\n  useEffect(() => {\n    if (loading || isAuthenticated) {\n      return;\n    }\n\n    const fn = async () => {\n      await loginWithRedirect({\n        appState: {\n          targetUrl: path\n        }\n      });\n    };\n\n    fn();\n  }, [loading, isAuthenticated, loginWithRedirect, path]);\n\n  const render = props => isAuthenticated === true ? React.createElement(Component, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })) : null;\n\n  return React.createElement(Route, Object.assign({\n    path: path,\n    render: render\n  }, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }));\n};\n\nexport default PrivateRoute;","map":{"version":3,"sources":["/Users/mac/Desktop/oxo/engine/src/Navigation/PrivateRoute.tsx"],"names":["React","useEffect","Route","useAuth0","PrivateRoute","Component","component","path","rest","loading","isAuthenticated","loginWithRedirect","fn","appState","targetUrl","render","props"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,QAAT,QAAyB,wBAAzB;;AAOA,MAAMC,YAAY,GAAG,UAIwB;AAAA,MAHhCC,SAGgC,QAH3CC,SAG2C;AAAA,MAF3CC,IAE2C,QAF3CA,IAE2C;AAAA,MADxCC,IACwC;;AAAA,mBACaL,QAAQ,EADrB;AAAA,QACnCM,OADmC,YACnCA,OADmC;AAAA,QAC1BC,eAD0B,YAC1BA,eAD0B;AAAA,QACTC,iBADS,YACTA,iBADS;;AAG3CV,EAAAA,SAAS,CAAC,MAAY;AACpB,QAAIQ,OAAO,IAAIC,eAAf,EAAgC;AAC9B;AACD;;AACD,UAAME,EAAE,GAAG,YAA0B;AACnC,YAAMD,iBAAiB,CAAC;AACtBE,QAAAA,QAAQ,EAAE;AAAEC,UAAAA,SAAS,EAAEP;AAAb;AADY,OAAD,CAAvB;AAGD,KAJD;;AAKAK,IAAAA,EAAE;AACH,GAVQ,EAUN,CAACH,OAAD,EAAUC,eAAV,EAA2BC,iBAA3B,EAA8CJ,IAA9C,CAVM,CAAT;;AAYA,QAAMQ,MAAM,GAAIC,KAAD,IACbN,eAAe,KAAK,IAApB,GAA2B,oBAAC,SAAD,oBAAeM,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA3B,GAAsD,IADxD;;AAGA,SAAO,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAET,IAAb;AAAmB,IAAA,MAAM,EAAEQ;AAA3B,KAAuCP,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAvBD;;AAyBA,eAAeJ,YAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { useAuth0 } from \"../App/react-auth0-spa\";\n\ninterface PrivateRouteProps {\n  component: any;\n  path: string;\n}\n\nconst PrivateRoute = ({\n  component: Component,\n  path,\n  ...rest\n}: PrivateRouteProps): React.ReactElement => {\n  const { loading, isAuthenticated, loginWithRedirect } = useAuth0();\n\n  useEffect((): void => {\n    if (loading || isAuthenticated) {\n      return;\n    }\n    const fn = async (): Promise<any> => {\n      await loginWithRedirect({\n        appState: { targetUrl: path }\n      });\n    };\n    fn();\n  }, [loading, isAuthenticated, loginWithRedirect, path]);\n\n  const render = (props: any): React.ReactElement | null =>\n    isAuthenticated === true ? <Component {...props} /> : null;\n\n  return <Route path={path} render={render} {...rest} />;\n};\n\nexport default PrivateRoute;\n"]},"metadata":{},"sourceType":"module"}