{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/oxo/engine/src/Pages/Database/Table.tsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nfunction Table(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Hi\");\n}\n\nconst mapStateToProps = state => {\n  return {\n    databaseEntries: state.database.data\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatchLoadDatabase: tableName => dispatch(loadDatabase(tableName))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);","map":{"version":3,"sources":["/Users/mac/Desktop/oxo/engine/src/Pages/Database/Table.tsx"],"names":["React","connect","Table","props","mapStateToProps","state","databaseEntries","database","data","mapDispatchToProps","dispatch","dispatchLoadDatabase","tableName","loadDatabase"],"mappings":";AAAA,OAAOA,KAAP,MAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAcA,SAASC,KAAT,CAAeC,KAAf,EAAsD;AAClD,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;AAED,MAAMC,eAAe,GAAIC,KAAD,IAAgB;AACpC,SAAO;AACHC,IAAAA,eAAe,EAAED,KAAK,CAACE,QAAN,CAAeC;AAD7B,GAAP;AAGH,CAJD;;AAMA,MAAMC,kBAAkB,GAAIC,QAAD,IAAmB;AAC1C,SAAO;AACHC,IAAAA,oBAAoB,EAAGC,SAAD,IAAuBF,QAAQ,CAACG,YAAY,CAACD,SAAD,CAAb;AADlD,GAAP;AAGH,CAJD;;AAMA,eAAeX,OAAO,CAClBG,eADkB,EAElBK,kBAFkB,CAAP,CAGbP,KAHa,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport MUIDataTable, { MUIDataTableOptions } from \"mui-datatables\";\nimport { useHistory } from \"react-router-dom\";\nimport { useAuth0 } from \"../../App/react-auth0-spa\";\n\ninterface TableProps {\n    uniqueColumns: any[];\n    databaseList: any[];\n    databaseEntries: any[];\n    dispatchDatabaseList: any;\n    dispatchLoadDatabase: any;\n}\n\nfunction Table(props: TableProps): React.ReactElement {\n    return (\n        <div>\n            Hi\n        </div>\n    )\n}\n\nconst mapStateToProps = (state: any) => {\n    return {\n        databaseEntries: state.database.data\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        dispatchLoadDatabase: (tableName: string) => dispatch(loadDatabase(tableName))\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Table);"]},"metadata":{},"sourceType":"module"}