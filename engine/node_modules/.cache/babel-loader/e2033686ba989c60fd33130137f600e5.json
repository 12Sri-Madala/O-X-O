{"ast":null,"code":"import _defineProperty from \"/Users/mac/Desktop/oxo/engine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { LOAD_DRIVER_MATCHES, LOAD_OWNER_MATCHES, MATCH_ERROR, LOAD_OWNERS_INFO, LOAD_DRIVERS_INFO } from \"./actionTypes\";\nconst initialState = {\n  driverMatches: [{}],\n  ownerMatches: [{}],\n  driversInfo: {},\n  ownersInfo: {}\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case LOAD_DRIVER_MATCHES:\n      return _objectSpread({}, state, {\n        driverMatches: action.payload\n      });\n\n    case LOAD_OWNER_MATCHES:\n      return _objectSpread({}, state, {\n        ownerMatches: action.payload\n      });\n\n    case LOAD_DRIVERS_INFO:\n      return _objectSpread({}, state, {\n        driversInfo: action.payload\n      });\n\n    case LOAD_OWNERS_INFO:\n      return _objectSpread({}, state, {\n        ownersInfo: action.payload\n      });\n\n    case MATCH_ERROR:\n      return _objectSpread({}, state, {\n        error: action.payload\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/mac/Desktop/oxo/engine/src/Pages/MatchList/Redux/MatchListReducer.tsx"],"names":["LOAD_DRIVER_MATCHES","LOAD_OWNER_MATCHES","MATCH_ERROR","LOAD_OWNERS_INFO","LOAD_DRIVERS_INFO","initialState","driverMatches","ownerMatches","driversInfo","ownersInfo","state","action","type","payload","error"],"mappings":";;;;;;AAAA,SACEA,mBADF,EAEEC,kBAFF,EAGEC,WAHF,EAIEC,gBAJF,EAKEC,iBALF,QAMO,eANP;AAQA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,aAAa,EAAE,CAAC,EAAD,CADI;AAEnBC,EAAAA,YAAY,EAAE,CAAC,EAAD,CAFK;AAGnBC,EAAAA,WAAW,EAAE,EAHM;AAInBC,EAAAA,UAAU,EAAE;AAJO,CAArB;AAOA,eAAe,UAASC,KAAK,GAAGL,YAAjB,EAA+BM,MAA/B,EAAsE;AACnF,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKZ,mBAAL;AACE,+BACKU,KADL;AAEEJ,QAAAA,aAAa,EAAEK,MAAM,CAACE;AAFxB;;AAIF,SAAKZ,kBAAL;AACE,+BACKS,KADL;AAEEH,QAAAA,YAAY,EAAEI,MAAM,CAACE;AAFvB;;AAIF,SAAKT,iBAAL;AACE,+BACKM,KADL;AAEEF,QAAAA,WAAW,EAAEG,MAAM,CAACE;AAFtB;;AAIF,SAAKV,gBAAL;AACE,+BACKO,KADL;AAEED,QAAAA,UAAU,EAAEE,MAAM,CAACE;AAFrB;;AAIF,SAAKX,WAAL;AACE,+BACOQ,KADP;AAEII,QAAAA,KAAK,EAAEH,MAAM,CAACE;AAFlB;;AAIF;AACE,aAAOH,KAAP;AA3BJ;AA6BD","sourcesContent":["import {\n  LOAD_DRIVER_MATCHES,\n  LOAD_OWNER_MATCHES,\n  MATCH_ERROR,\n  LOAD_OWNERS_INFO,\n  LOAD_DRIVERS_INFO\n} from \"./actionTypes\";\n\nconst initialState = {\n  driverMatches: [{}],\n  ownerMatches: [{}],\n  driversInfo: {},\n  ownersInfo: {}\n};\n\nexport default function(state = initialState, action: {type: string, payload?: any}) {\n  switch (action.type) {\n    case LOAD_DRIVER_MATCHES:\n      return {\n        ...state,\n        driverMatches: action.payload\n      };\n    case LOAD_OWNER_MATCHES:\n      return {\n        ...state,\n        ownerMatches: action.payload\n      };\n    case LOAD_DRIVERS_INFO:\n      return {\n        ...state,\n        driversInfo: action.payload\n      };\n    case LOAD_OWNERS_INFO:\n      return {\n        ...state,\n        ownersInfo: action.payload\n      };\n    case MATCH_ERROR:\n      return {\n          ...state,\n          error: action.payload\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}