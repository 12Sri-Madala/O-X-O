{"ast":null,"code":"import _slicedToArray from \"/Users/mac/Desktop/oxo/engine/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mac/Desktop/oxo/engine/src/Pages/Database/Database.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./Database.css\";\nimport { getDatabaseList, loadDatabase } from \"./Redux/actions\";\nimport MUIDataTable from \"mui-datatables\";\nimport { useAuth0 } from \"../../App/react-auth0-spa\";\n\nfunction Database(props) {\n  const _useAuth = useAuth0(),\n        getTokenSilently = _useAuth.getTokenSilently;\n\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        token = _useState2[0],\n        setToken = _useState2[1];\n\n  useEffect(() => {\n    const fetchDatabaseList = async () => {\n      const newToken = await getTokenSilently();\n      setToken(newToken);\n      console.log('what is the new token: ', newToken);\n      props.dispatchDatabaseList(newToken);\n    };\n\n    fetchDatabaseList();\n  }, []);\n\n  const generateList = () => {\n    return props.databaseList.map(table => {\n      let capitalLetter = table[0].toUpperCase();\n      let tableName = capitalLetter + table.slice(1);\n      return React.createElement(\"h2\", {\n        key: table,\n        className: \"tableName\",\n        onClick: () => {\n          getTable(table);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, tableName);\n    });\n  };\n\n  const dataColumns = [{\n    name: \"status\",\n    label: \"Status\"\n  }, {\n    name: \"id\",\n    label: \"ID\"\n  }, {\n    name: \"pickEnd\",\n    label: \"Pickup End\"\n  }, {\n    name: \"dropStart\",\n    label: \"Dropoff Start\"\n  }, {\n    name: \"dropEnd\",\n    label: \"Dropoff End\"\n  }];\n  const dataTableOptions = {\n    filterType: \"checkbox\",\n    selectableRows: \"single\",\n    pagination: false,\n    print: false,\n    expandableRows: true,\n    onRowsSelect: currentRowsSelected => selectedDriverIndex = currentRowsSelected[0].index\n  };\n\n  const getTable = async tableName => {\n    props.dispatchLoadDatabase(tableName);\n    return React.createElement(MUIDataTable, {\n      title: tableName,\n      data: props.driverMatches,\n      columns: driverColumns,\n      options: driverTableOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, generateList());\n}\n\nconst mapStateToProps = state => {\n  return {\n    databaseList: state.database.databaseList,\n    databaseEntries: state.database.data\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatchDatabaseList: token => dispatch(getDatabaseList(token)),\n    dispatchLoadDatabase: tableName => dispatch(loadDatabase(tableName))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Database);","map":{"version":3,"sources":["/Users/mac/Desktop/oxo/engine/src/Pages/Database/Database.tsx"],"names":["React","useState","useEffect","connect","getDatabaseList","loadDatabase","MUIDataTable","useAuth0","Database","props","getTokenSilently","token","setToken","fetchDatabaseList","newToken","console","log","dispatchDatabaseList","generateList","databaseList","map","table","capitalLetter","toUpperCase","tableName","slice","getTable","dataColumns","name","label","dataTableOptions","filterType","selectableRows","pagination","print","expandableRows","onRowsSelect","currentRowsSelected","selectedDriverIndex","index","dispatchLoadDatabase","driverMatches","driverColumns","driverTableOptions","mapStateToProps","state","database","databaseEntries","data","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport \"./Database.css\"\nimport { getDatabaseList, loadDatabase } from \"./Redux/actions\";\nimport MUIDataTable, { MUIDataTableOptions } from \"mui-datatables\";\nimport { useAuth0 } from \"../../App/react-auth0-spa\";\n\ninterface DatabaseProps {\n    databaseList: any[];\n    dispatchDatabaseList: any;\n}\n\nfunction Database(props: DatabaseProps): React.ReactElement {\n    const { getTokenSilently } = useAuth0();\n    const [token, setToken] = useState();\n\n    useEffect(() => {\n        const fetchDatabaseList = async () => {\n            const newToken = await getTokenSilently();\n            setToken(newToken);\n            console.log('what is the new token: ', newToken)\n            props.dispatchDatabaseList(newToken)\n        };\n        fetchDatabaseList();\n    }, []);\n\n    const generateList = () => {\n        return props.databaseList.map((table: string) => {\n            let capitalLetter = table[0].toUpperCase()\n            let tableName = capitalLetter + table.slice(1)\n            return (\n                <h2\n                    key={table}\n                    className=\"tableName\"\n                    onClick={() => { getTable(table) }}\n                >{tableName}</h2>\n            )\n        })\n    }\n\n    const dataColumns = [\n        { name: \"status\", label: \"Status\" },\n        { name: \"id\", label: \"ID\" },\n        { name: \"pickEnd\", label: \"Pickup End\" },\n        { name: \"dropStart\", label: \"Dropoff Start\" },\n        { name: \"dropEnd\", label: \"Dropoff End\" },\n    ];\n\n    const dataTableOptions: MUIDataTableOptions = {\n        filterType: \"checkbox\",\n        selectableRows: \"single\",\n        pagination: false,\n        print: false,\n        expandableRows: true,\n        onRowsSelect: currentRowsSelected =>\n            (selectedDriverIndex = currentRowsSelected[0].index)\n    };\n\n    const getTable = async (tableName: string) => {\n        props.dispatchLoadDatabase(tableName)\n\n        return (\n            <MUIDataTable\n                title={tableName}\n                data={props.driverMatches}\n                columns={driverColumns}\n                options={driverTableOptions}\n            />\n        )\n    }\n\n    return (\n        <div\n            className=\"container\"\n        >\n            {generateList()}\n        </div>\n    )\n}\n\nconst mapStateToProps = (state: any) => {\n    return {\n        databaseList: state.database.databaseList,\n        databaseEntries: state.database.data\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        dispatchDatabaseList: (token: string) => dispatch(getDatabaseList(token)),\n        dispatchLoadDatabase: (tableName: string) => dispatch(loadDatabase(tableName))\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Database);"]},"metadata":{},"sourceType":"module"}