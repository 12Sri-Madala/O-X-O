{"ast":null,"code":"import _slicedToArray from \"/Users/mac/Desktop/oxo/engine/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mac/Desktop/oxo/engine/src/Pages/MatchList/MatchList.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./MatchList.css\";\nimport { loadDriverMatches, loadOwnerMatches, makeConnection } from \"./Redux/actions\";\nimport { useAuth0 } from \"../../App/react-auth0-spa\";\nimport MUIDataTable from \"mui-datatables\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport DatePicker from \"react-datepicker\";\nlet selectedDriverIndex;\nlet selectedOwnerIndex;\n\nfunction MatchList(props) {\n  const _useState = useState(new Date()),\n        _useState2 = _slicedToArray(_useState, 2),\n        date = _useState2[0],\n        setDate = _useState2[1];\n\n  const _useAuth = useAuth0(),\n        getTokenSilently = _useAuth.getTokenSilently;\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        token = _useState4[0],\n        setToken = _useState4[1];\n\n  const _useState5 = useState(true),\n        _useState6 = _slicedToArray(_useState5, 2),\n        refreshRequired = _useState6[0],\n        setRefreshRequired = _useState6[1];\n\n  useEffect(() => {\n    const fetchMatches = async () => {\n      if (refreshRequired) {\n        const newToken = await getTokenSilently();\n        setToken(newToken);\n        props.dispatchLoadOwnerMatches(date, newToken);\n        props.dispatchLoadDriverMatches(date, newToken);\n        setRefreshRequired(false);\n      }\n    };\n\n    fetchMatches();\n  }, [date, refreshRequired]); //This won't trigger a reload of data, so to trigger, need another variable?\n\n  const handleConnect = async () => {\n    if (selectedOwnerIndex !== undefined && selectedDriverIndex !== undefined) {\n      const driverMatch = props.driverMatches[selectedDriverIndex];\n      const ownerMatch = props.ownerMatches[selectedOwnerIndex]; // new\n\n      const newToken = await getTokenSilently();\n      props.dispatchMakeConnection(driverMatch.id, ownerMatch.id, date, newToken);\n      setRefreshRequired(true);\n    }\n  };\n\n  const driverColumns = [{\n    name: \"status\",\n    label: \"Status\"\n  }, {\n    name: \"pickStart\",\n    label: \"Pickup Start\"\n  }, {\n    name: \"pickEnd\",\n    label: \"Pickup End\"\n  }, {\n    name: \"dropStart\",\n    label: \"Dropoff Start\"\n  }, {\n    name: \"dropEnd\",\n    label: \"Dropoff End\"\n  }, {\n    name: \"driverID\",\n    label: \"Driver ID\"\n  }];\n  const ownerColumns = [{\n    name: \"status\",\n    label: \"Status\"\n  }, {\n    name: \"pickupTime\",\n    label: \"Pickup Time\"\n  }, {\n    name: \"dropoffTime\",\n    label: \"Dropoff Time\"\n  }, {\n    name: \"pickupLocation\",\n    label: \"Pickup Spot\"\n  }, {\n    name: \"dropoffLocation\",\n    label: \"Dropoff Spot\"\n  }, {\n    name: \"ownerID\",\n    label: \"Owner ID\"\n  }];\n  const driverTableOptions = {\n    filterType: \"checkbox\",\n    selectableRows: \"single\",\n    pagination: false,\n    print: false,\n    expandableRows: true,\n    onRowsSelect: currentRowsSelected => selectedDriverIndex = currentRowsSelected[0].index\n  };\n  const ownerTableOptions = {\n    filterType: \"checkbox\",\n    selectableRows: \"single\",\n    pagination: false,\n    print: false,\n    expandableRows: true,\n    onRowsSelect: currentRowsSelected => selectedOwnerIndex = currentRowsSelected[0].index\n  };\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"App-datepicker\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(DatePicker, {\n    selected: date,\n    onChange: date => {\n      setDate(date);\n      setRefreshRequired(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"App-tables\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(MUIDataTable, {\n    title: \"Drivers\",\n    data: props.driverMatches,\n    columns: driverColumns,\n    options: driverTableOptions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }), \"\\xA0\\xA0\", React.createElement(MUIDataTable, {\n    title: \"Owners\",\n    data: props.ownerMatches,\n    columns: ownerColumns,\n    options: ownerTableOptions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"App-footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: handleConnect,\n    style: {\n      backgroundColor: \"#ff5252\",\n      borderColor: \"#fafafa\",\n      paddingLeft: 15,\n      paddingRight: 15,\n      borderRadius: 10,\n      fontSize: \"x-large\",\n      color: \"#fafafa\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \"Connect\")));\n}\n\nconst mapStateToProps = state => {\n  return {\n    driverMatches: state.matches.driverMatches,\n    ownerMatches: state.matches.ownerMatches\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatchLoadDriverMatches: (date, token) => dispatch(loadDriverMatches(date, token)),\n    dispatchLoadOwnerMatches: (date, token) => dispatch(loadOwnerMatches(date, token)),\n    dispatchMakeConnection: (driverMatchID, ownerMatchID, date, token) => dispatch(makeConnection(driverMatchID, ownerMatchID, date, token))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MatchList);","map":{"version":3,"sources":["/Users/mac/Desktop/oxo/engine/src/Pages/MatchList/MatchList.tsx"],"names":["React","useState","useEffect","connect","loadDriverMatches","loadOwnerMatches","makeConnection","useAuth0","MUIDataTable","DatePicker","selectedDriverIndex","selectedOwnerIndex","MatchList","props","Date","date","setDate","getTokenSilently","token","setToken","refreshRequired","setRefreshRequired","fetchMatches","newToken","dispatchLoadOwnerMatches","dispatchLoadDriverMatches","handleConnect","undefined","driverMatch","driverMatches","ownerMatch","ownerMatches","dispatchMakeConnection","id","driverColumns","name","label","ownerColumns","driverTableOptions","filterType","selectableRows","pagination","print","expandableRows","onRowsSelect","currentRowsSelected","index","ownerTableOptions","backgroundColor","borderColor","paddingLeft","paddingRight","borderRadius","fontSize","color","mapStateToProps","state","matches","mapDispatchToProps","dispatch","driverMatchID","ownerMatchID"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport \"./MatchList.css\";\nimport {\n  loadDriverMatches,\n  loadOwnerMatches,\n  makeConnection\n} from \"./Redux/actions\";\nimport { useAuth0 } from \"../../App/react-auth0-spa\";\n\nimport MUIDataTable, { MUIDataTableOptions } from \"mui-datatables\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport DatePicker from \"react-datepicker\";\n\ntype MatchListProps = {\n  driverMatches: [{ id: string }];\n  ownerMatches: [{ id: string; carID: string }];\n  dispatchLoadDriverMatches: any;\n  dispatchLoadOwnerMatches: any;\n  dispatchMakeConnection: any;\n};\n\nlet selectedDriverIndex: number;\nlet selectedOwnerIndex: number;\n\nfunction MatchList(props: MatchListProps): React.ReactElement {\n  const [date, setDate] = useState<Date | null>(new Date());\n  const { getTokenSilently } = useAuth0();\n  const [token, setToken] = useState();\n  const [refreshRequired, setRefreshRequired] = useState(true);\n\n  useEffect(() => {\n    const fetchMatches = async () => {\n      if (refreshRequired) {\n        const newToken = await getTokenSilently();\n        setToken(newToken);\n        props.dispatchLoadOwnerMatches(date, newToken);\n        props.dispatchLoadDriverMatches(date, newToken);\n        setRefreshRequired(false);\n      }\n    };\n    fetchMatches();\n  }, [date, refreshRequired]);\n\n  //This won't trigger a reload of data, so to trigger, need another variable?\n  const handleConnect = async () => {\n    if (selectedOwnerIndex !== undefined && selectedDriverIndex !== undefined) {\n      const driverMatch = props.driverMatches[selectedDriverIndex];\n      const ownerMatch = props.ownerMatches[selectedOwnerIndex];\n\n      // new\n      const newToken = await getTokenSilently();\n      props.dispatchMakeConnection(\n        driverMatch.id,\n        ownerMatch.id,\n        date,\n        newToken\n      );\n      setRefreshRequired(true);\n    }\n  };\n\n  const driverColumns = [\n    { name: \"status\", label: \"Status\" },\n    { name: \"pickStart\", label: \"Pickup Start\" },\n    { name: \"pickEnd\", label: \"Pickup End\" },\n    { name: \"dropStart\", label: \"Dropoff Start\" },\n    { name: \"dropEnd\", label: \"Dropoff End\" },\n    { name: \"driverID\", label: \"Driver ID\" }\n  ];\n\n  const ownerColumns = [\n    { name: \"status\", label: \"Status\" },\n    { name: \"pickupTime\", label: \"Pickup Time\" },\n    { name: \"dropoffTime\", label: \"Dropoff Time\" },\n    { name: \"pickupLocation\", label: \"Pickup Spot\" },\n    { name: \"dropoffLocation\", label: \"Dropoff Spot\" },\n    { name: \"ownerID\", label: \"Owner ID\" }\n  ];\n\n  const driverTableOptions: MUIDataTableOptions = {\n    filterType: \"checkbox\",\n    selectableRows: \"single\",\n    pagination: false,\n    print: false,\n    expandableRows: true,\n    onRowsSelect: currentRowsSelected =>\n      (selectedDriverIndex = currentRowsSelected[0].index)\n  };\n  const ownerTableOptions: MUIDataTableOptions = {\n    filterType: \"checkbox\",\n    selectableRows: \"single\",\n    pagination: false,\n    print: false,\n    expandableRows: true,\n    onRowsSelect: currentRowsSelected =>\n      (selectedOwnerIndex = currentRowsSelected[0].index)\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"App-datepicker\">\n        <DatePicker\n          selected={date}\n          onChange={date => {\n            setDate(date);\n            setRefreshRequired(true);\n          }}\n        />\n      </div>\n      <div className=\"App-tables\">\n        <MUIDataTable\n          title={\"Drivers\"}\n          data={props.driverMatches}\n          columns={driverColumns}\n          options={driverTableOptions}\n        />\n        &nbsp;&nbsp;\n        <MUIDataTable\n          title={\"Owners\"}\n          data={props.ownerMatches}\n          columns={ownerColumns}\n          options={ownerTableOptions}\n        />\n      </div>\n      <div className=\"App-footer\">\n        <button\n          onClick={handleConnect}\n          style={{\n            backgroundColor: \"#ff5252\",\n            borderColor: \"#fafafa\",\n            paddingLeft: 15,\n            paddingRight: 15,\n            borderRadius: 10,\n            fontSize: \"x-large\",\n            color: \"#fafafa\"\n          }}\n        >\n          Connect\n        </button>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state: any) => {\n  return {\n    driverMatches: state.matches.driverMatches,\n    ownerMatches: state.matches.ownerMatches\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    dispatchLoadDriverMatches: (date: Date, token: string) =>\n      dispatch(loadDriverMatches(date, token)),\n    dispatchLoadOwnerMatches: (date: Date, token: string) =>\n      dispatch(loadOwnerMatches(date, token)),\n    dispatchMakeConnection: (\n      driverMatchID: string,\n      ownerMatchID: string,\n      date: Date,\n      token: string\n    ) => dispatch(makeConnection(driverMatchID, ownerMatchID, date, token))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MatchList);\n"]},"metadata":{},"sourceType":"module"}