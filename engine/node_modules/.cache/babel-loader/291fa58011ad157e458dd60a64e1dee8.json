{"ast":null,"code":"import _slicedToArray from \"/Users/mac/Desktop/oxo/engine/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mac/Desktop/oxo/engine/src/Pages/Database/Table.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport MUIDataTable from \"mui-datatables\";\nimport { loadDatabase } from \"./Redux/actions\";\nimport { useAuth0 } from \"../../App/react-auth0-spa\";\nimport { driverColumns, ownerColumns, connectionColumns, vehicleColumns, matchColumns, waitlistColumns } from \"./dataColumns\";\n\nfunction Table(props) {\n  const _useAuth = useAuth0(),\n        getTokenSilently = _useAuth.getTokenSilently;\n\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        token = _useState2[0],\n        setToken = _useState2[1];\n\n  const urlIndex = props.location.pathname.lastIndexOf(\"/\") + 1;\n  const currentTable = props.location.pathname.slice(urlIndex);\n  useEffect(() => {\n    const fetchDatabaseList = async () => {\n      const newToken = await getTokenSilently();\n      setToken(newToken);\n      props.dispatchLoadDatabase(newToken, currentTable, 0, 0);\n    };\n\n    fetchDatabaseList();\n  }, []);\n  const dataTableOptions = {\n    filterType: \"checkbox\",\n    selectableRows: \"single\",\n    pagination: true,\n    print: false,\n    expandableRows: true\n  };\n\n  const populateTable = () => {\n    switch (currentTable) {\n      case \"connection\":\n        return React.createElement(MUIDataTable, {\n          title: \"Connection\",\n          data: props.databaseEntries,\n          columns: connectionColumns,\n          options: dataTableOptions,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        });\n\n      case \"driver\":\n        return React.createElement(MUIDataTable, {\n          title: \"Driver\",\n          data: props.databaseEntries,\n          columns: driverColumns,\n          options: dataTableOptions,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        });\n\n      case \"match\":\n        return React.createElement(MUIDataTable, {\n          title: \"Match\",\n          data: props.databaseEntries,\n          columns: matchColumns,\n          options: dataTableOptions,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        });\n\n      case \"owner\":\n        return React.createElement(MUIDataTable, {\n          title: \"Owner\",\n          data: props.databaseEntries,\n          columns: ownerColumns,\n          options: dataTableOptions,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        });\n\n      case \"vehicle\":\n        return React.createElement(MUIDataTable, {\n          title: \"Vehicle\",\n          data: props.databaseEntries,\n          columns: vehicleColumns,\n          options: dataTableOptions,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        });\n\n      case \"waitlist\":\n        return React.createElement(MUIDataTable, {\n          title: \"Waitlist\",\n          data: props.databaseEntries,\n          columns: waitlistColumns,\n          options: dataTableOptions,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        });\n\n      default:\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, populateTable());\n}\n\nconst mapStateToProps = state => {\n  return {\n    databaseEntries: state.database.databaseEntries\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatchLoadDatabase: (token, tableName, page, pageSize) => dispatch(loadDatabase(token, tableName, page, pageSize))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);","map":{"version":3,"sources":["/Users/mac/Desktop/oxo/engine/src/Pages/Database/Table.tsx"],"names":["React","useState","useEffect","connect","MUIDataTable","loadDatabase","useAuth0","driverColumns","ownerColumns","connectionColumns","vehicleColumns","matchColumns","waitlistColumns","Table","props","getTokenSilently","token","setToken","urlIndex","location","pathname","lastIndexOf","currentTable","slice","fetchDatabaseList","newToken","dispatchLoadDatabase","dataTableOptions","filterType","selectableRows","pagination","print","expandableRows","populateTable","databaseEntries","mapStateToProps","state","database","mapDispatchToProps","dispatch","tableName","page","pageSize"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport MUIDataTable, { MUIDataTableOptions } from \"mui-datatables\";\nimport { loadDatabase } from \"./Redux/actions\";\nimport { useHistory } from \"react-router-dom\";\nimport { useAuth0 } from \"../../App/react-auth0-spa\";\nimport {\n\tdriverColumns,\n\townerColumns,\n\tconnectionColumns,\n\tvehicleColumns,\n\tmatchColumns,\n\twaitlistColumns\n} from \"./dataColumns\"\n\ninterface TableProps {\n\tdatabaseEntries: any[];\n\tdispatchLoadDatabase: any;\n\tlocation: any;\n}\n\nfunction Table(props: TableProps): React.ReactElement {\n\tconst { getTokenSilently } = useAuth0();\n\tconst [token, setToken] = useState();\n\tconst urlIndex = props.location.pathname.lastIndexOf(\"/\") + 1;\n\tconst currentTable = props.location.pathname.slice(urlIndex);\n\n\tuseEffect(() => {\n\t\tconst fetchDatabaseList = async () => {\n\t\t\tconst newToken = await getTokenSilently();\n\t\t\tsetToken(newToken);\n\n\t\t\tprops.dispatchLoadDatabase(newToken, currentTable, 0, 0);\n\t\t};\n\t\tfetchDatabaseList();\n\t}, []);\n\n\tconst dataTableOptions: MUIDataTableOptions = {\n\t\tfilterType: \"checkbox\",\n\t\tselectableRows: \"single\",\n\t\tpagination: true,\n\t\tprint: false,\n\t\texpandableRows: true\n\t};\n\n\tconst populateTable = () => {\n\t\tswitch (currentTable) {\n\t\t\tcase \"connection\":\n\t\t\t\treturn (\n\t\t\t\t\t<MUIDataTable\n\t\t\t\t\t\ttitle={\"Connection\"}\n\t\t\t\t\t\tdata={props.databaseEntries}\n\t\t\t\t\t\tcolumns={connectionColumns}\n\t\t\t\t\t\toptions={dataTableOptions}\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\tcase \"driver\":\n\t\t\t\treturn (\n\t\t\t\t\t<MUIDataTable\n\t\t\t\t\t\ttitle={\"Driver\"}\n\t\t\t\t\t\tdata={props.databaseEntries}\n\t\t\t\t\t\tcolumns={driverColumns}\n\t\t\t\t\t\toptions={dataTableOptions}\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\tcase \"match\":\n\t\t\t\treturn (\n\t\t\t\t\t<MUIDataTable\n\t\t\t\t\t\ttitle={\"Match\"}\n\t\t\t\t\t\tdata={props.databaseEntries}\n\t\t\t\t\t\tcolumns={matchColumns}\n\t\t\t\t\t\toptions={dataTableOptions}\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\tcase \"owner\":\n\t\t\t\treturn (\n\t\t\t\t\t<MUIDataTable\n\t\t\t\t\t\ttitle={\"Owner\"}\n\t\t\t\t\t\tdata={props.databaseEntries}\n\t\t\t\t\t\tcolumns={ownerColumns}\n\t\t\t\t\t\toptions={dataTableOptions}\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\tcase \"vehicle\":\n\t\t\t\treturn (\n\t\t\t\t\t<MUIDataTable\n\t\t\t\t\t\ttitle={\"Vehicle\"}\n\t\t\t\t\t\tdata={props.databaseEntries}\n\t\t\t\t\t\tcolumns={vehicleColumns}\n\t\t\t\t\t\toptions={dataTableOptions}\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\tcase \"waitlist\":\n\t\t\t\treturn (\n\t\t\t\t\t<MUIDataTable\n\t\t\t\t\t\ttitle={\"Waitlist\"}\n\t\t\t\t\t\tdata={props.databaseEntries}\n\t\t\t\t\t\tcolumns={waitlistColumns}\n\t\t\t\t\t\toptions={dataTableOptions}\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\tdefault:\n\t\t}\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t{populateTable()}\n\t\t</div>\n\t)\n}\n\nconst mapStateToProps = (state: any) => {\n\treturn {\n\t\tdatabaseEntries: state.database.databaseEntries\n\t}\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n\treturn {\n\t\tdispatchLoadDatabase: (token: string, tableName: string, page: number, pageSize: number) => dispatch(loadDatabase(token, tableName, page, pageSize))\n\t}\n}\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(Table);"]},"metadata":{},"sourceType":"module"}