{"ast":null,"code":"import _slicedToArray from \"/Users/mac/Desktop/oxo/engine/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mac/Desktop/oxo/engine/src/Pages/Database/Table.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport MUIDataTable from \"mui-datatables\";\nimport { loadDatabase } from \"./Redux/actions\";\nimport { useAuth0 } from \"../../App/react-auth0-spa\";\nimport { driverColumns, ownerColumns, connectionColumns, vehicleColumns, matchColumns, waitlistColumns } from \"./dataColumns\";\n\nfunction Table(props) {\n  const _useAuth = useAuth0(),\n        getTokenSilently = _useAuth.getTokenSilently;\n\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        token = _useState2[0],\n        setToken = _useState2[1];\n\n  const urlIndex = props.location.pathname.lastIndexOf(\"/\") + 1;\n  const currentTable = props.location.pathname.slice(urlIndex);\n  useEffect(() => {\n    const fetchDatabaseList = async () => {\n      const newToken = await getTokenSilently();\n      setToken(newToken);\n      props.dispatchLoadDatabase(newToken, currentTable, 5, 3);\n    };\n\n    fetchDatabaseList();\n  }, []);\n  const dataTableOptions = {\n    filterType: \"checkbox\",\n    selectableRows: \"single\",\n    pagination: true,\n    print: false,\n    expandableRows: true\n  };\n\n  const populateTable = () => {\n    switch (currentTable) {\n      case \"connection\":\n        return React.createElement(MUIDataTable, {\n          title: \"Connection\",\n          data: props.databaseEntries,\n          columns: connectionColumns,\n          options: dataTableOptions,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        });\n\n      case \"driver\":\n        return React.createElement(MUIDataTable, {\n          title: \"Driver\",\n          data: props.databaseEntries,\n          columns: driverColumns,\n          options: dataTableOptions,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        });\n\n      case \"match\":\n        return React.createElement(MUIDataTable, {\n          title: \"Match\",\n          data: props.databaseEntries,\n          columns: matchColumns,\n          options: dataTableOptions,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        });\n\n      case \"owner\":\n        return React.createElement(MUIDataTable, {\n          title: \"Owner\",\n          data: props.databaseEntries,\n          columns: ownerColumns,\n          options: dataTableOptions,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        });\n\n      case \"vehicle\":\n        return React.createElement(MUIDataTable, {\n          title: \"Vehicle\",\n          data: props.databaseEntries,\n          columns: vehicleColumns,\n          options: dataTableOptions,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        });\n\n      case \"waitlist\":\n        return React.createElement(MUIDataTable, {\n          title: \"Waitlist\",\n          data: props.databaseEntries,\n          columns: waitlistColumns,\n          options: dataTableOptions,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        });\n\n      default:\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, populateTable());\n}\n\nconst mapStateToProps = state => {\n  return {\n    databaseEntries: state.database.databaseEntries\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatchLoadDatabase: (token, tableName, page, pageSize) => dispatch(loadDatabase(token, tableName, page, pageSize))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);","map":{"version":3,"sources":["/Users/mac/Desktop/oxo/engine/src/Pages/Database/Table.tsx"],"names":["React","useState","useEffect","connect","MUIDataTable","loadDatabase","useAuth0","driverColumns","ownerColumns","connectionColumns","vehicleColumns","matchColumns","waitlistColumns","Table","props","getTokenSilently","token","setToken","urlIndex","location","pathname","lastIndexOf","currentTable","slice","fetchDatabaseList","newToken","dispatchLoadDatabase","dataTableOptions","filterType","selectableRows","pagination","print","expandableRows","populateTable","databaseEntries","mapStateToProps","state","database","mapDispatchToProps","dispatch","tableName","page","pageSize"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport MUIDataTable, { MUIDataTableOptions } from \"mui-datatables\";\nimport { loadDatabase } from \"./Redux/actions\";\nimport { useHistory } from \"react-router-dom\";\nimport { useAuth0 } from \"../../App/react-auth0-spa\";\nimport {\n    driverColumns,\n    ownerColumns,\n    connectionColumns,\n    vehicleColumns,\n    matchColumns,\n    waitlistColumns\n} from \"./dataColumns\"\n\ninterface TableProps {\n    databaseEntries: any[];\n    dispatchLoadDatabase: any;\n    location: any;\n}\n\nfunction Table(props: TableProps): React.ReactElement {\n    const { getTokenSilently } = useAuth0();\n    const [token, setToken] = useState();\n    const urlIndex = props.location.pathname.lastIndexOf(\"/\") + 1;\n    const currentTable = props.location.pathname.slice(urlIndex);\n\n    useEffect(() => {\n        const fetchDatabaseList = async () => {\n            const newToken = await getTokenSilently();\n            setToken(newToken);\n\n            props.dispatchLoadDatabase(newToken, currentTable, 5, 3);\n        };\n        fetchDatabaseList();\n    }, []);\n\n    const dataTableOptions: MUIDataTableOptions = {\n        filterType: \"checkbox\",\n        selectableRows: \"single\",\n        pagination: true,\n        print: false,\n        expandableRows: true\n    };\n\n    const populateTable = () => {\n        switch (currentTable) {\n            case \"connection\":\n                return (\n                    <MUIDataTable\n                        title={\"Connection\"}\n                        data={props.databaseEntries}\n                        columns={connectionColumns}\n                        options={dataTableOptions}\n                    />\n                )\n            case \"driver\":\n                return (\n                    <MUIDataTable\n                        title={\"Driver\"}\n                        data={props.databaseEntries}\n                        columns={driverColumns}\n                        options={dataTableOptions}\n                    />\n                )\n            case \"match\":\n                return (\n                    <MUIDataTable\n                        title={\"Match\"}\n                        data={props.databaseEntries}\n                        columns={matchColumns}\n                        options={dataTableOptions}\n                    />\n                )\n            case \"owner\":\n                return (\n                    <MUIDataTable\n                        title={\"Owner\"}\n                        data={props.databaseEntries}\n                        columns={ownerColumns}\n                        options={dataTableOptions}\n                    />\n                )\n            case \"vehicle\":\n                return (\n                    <MUIDataTable\n                        title={\"Vehicle\"}\n                        data={props.databaseEntries}\n                        columns={vehicleColumns}\n                        options={dataTableOptions}\n                    />\n                )\n            case \"waitlist\":\n                return (\n                    <MUIDataTable\n                        title={\"Waitlist\"}\n                        data={props.databaseEntries}\n                        columns={waitlistColumns}\n                        options={dataTableOptions}\n                    />\n                )\n            default:\n        }\n    }\n\n\n\n    return (\n        <div>\n            {populateTable()}\n        </div>\n    )\n}\n\nconst mapStateToProps = (state: any) => {\n    return {\n        databaseEntries: state.database.databaseEntries\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        dispatchLoadDatabase: (token: string, tableName: string, page: number, pageSize: number) => dispatch(loadDatabase(token, tableName, page, pageSize))\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Table);"]},"metadata":{},"sourceType":"module"}