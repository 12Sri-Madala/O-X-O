{"ast":null,"code":"import _slicedToArray from \"/Users/mac/Desktop/oxo/engine/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mac/Desktop/oxo/engine/src/Pages/Database/Database.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getDatabaseList } from \"./Redux/actions\";\n\nfunction Database(props) {\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        databaseList = _useState2[0],\n        setList = _useState2[1]; // const { getTokenSilently } = useAuth0();\n\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        token = _useState4[0],\n        setToken = _useState4[1]; // const [refreshRequired, setRefreshRequired] = useState(true);\n\n\n  useEffect(() => {\n    const fetchDatabaseList = async () => {\n      // if (refreshRequired) {\n      // const newToken = await getTokenSilently();\n      // setToken(newToken);\n      await props.dispatchDatabaseList(token); // setRefreshRequired(false);\n      // }\n    };\n\n    fetchDatabaseList();\n  }, []);\n\n  const generateList = () => {\n    console.log('does it even hit the generate list?', databaseList);\n    return databaseList.map(table => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, table);\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, generateList());\n}\n\nconst mapStateToProps = state => {\n  return {\n    databaseList: state.databaseList\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatchDatabaseList: token => dispatch(getDatabaseList(token))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Database);","map":{"version":3,"sources":["/Users/mac/Desktop/oxo/engine/src/Pages/Database/Database.tsx"],"names":["React","useState","useEffect","connect","getDatabaseList","Database","props","databaseList","setList","token","setToken","fetchDatabaseList","dispatchDatabaseList","generateList","console","log","map","table","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,eAAT,QAAgC,iBAAhC;;AAQA,SAASC,QAAT,CAAkBC,KAAlB,EAA4D;AAAA,oBACxBL,QAAQ,EADgB;AAAA;AAAA,QACjDM,YADiD;AAAA,QACnCC,OADmC,kBAExD;;;AAFwD,qBAG9BP,QAAQ,EAHsB;AAAA;AAAA,QAGjDQ,KAHiD;AAAA,QAG1CC,QAH0C,kBAIxD;;;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMS,iBAAiB,GAAG,YAAY;AAClC;AACA;AACA;AACA,YAAML,KAAK,CAACM,oBAAN,CAA2BH,KAA3B,CAAN,CAJkC,CAKlC;AACA;AACH,KAPD;;AAQAE,IAAAA,iBAAiB;AACpB,GAVQ,EAUN,EAVM,CAAT;;AAYA,QAAME,YAAY,GAAG,MAAM;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ,EAAmDR,YAAnD;AACA,WAAOA,YAAY,CAACS,GAAb,CAAkBC,KAAD,IAAmB;AACvC,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEEA,KAFF,CADJ;AAKH,KANM,CAAP;AAOH,GATD;;AAWA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,YAAY,EADjB,CADJ;AAKH;;AAED,MAAMK,eAAe,GAAIC,KAAD,IAAgB;AACpC,SAAO;AACHZ,IAAAA,YAAY,EAAEY,KAAK,CAACZ;AADjB,GAAP;AAGH,CAJD;;AAMA,MAAMa,kBAAkB,GAAIC,QAAD,IAAmB;AAC1C,SAAO;AACHT,IAAAA,oBAAoB,EAAGH,KAAD,IAAmBY,QAAQ,CAACjB,eAAe,CAACK,KAAD,CAAhB;AAD9C,GAAP;AAGH,CAJD;;AAMA,eAAeN,OAAO,CAClBe,eADkB,EAElBE,kBAFkB,CAAP,CAGbf,QAHa,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { getDatabaseList } from \"./Redux/actions\"\nimport { useAuth0 } from \"../../App/react-auth0-spa\";\n\ninterface DatabaseProps {\n    // databaseList: any;\n    dispatchDatabaseList: any;\n}\n\nfunction Database(props: DatabaseProps): React.ReactElement {\n    const [databaseList, setList] = useState();\n    // const { getTokenSilently } = useAuth0();\n    const [token, setToken] = useState();\n    // const [refreshRequired, setRefreshRequired] = useState(true);\n\n    useEffect(() => {\n        const fetchDatabaseList = async () => {\n            // if (refreshRequired) {\n            // const newToken = await getTokenSilently();\n            // setToken(newToken);\n            await props.dispatchDatabaseList(token)\n            // setRefreshRequired(false);\n            // }\n        };\n        fetchDatabaseList();\n    }, []);\n\n    const generateList = () => {\n        console.log('does it even hit the generate list?', databaseList)\n        return databaseList.map((table: string) => {\n            return (\n                <div\n                // onClick={getTable}\n                >{table}</div>\n            )\n        })\n    }\n\n    return (\n        <div>\n            {generateList()}\n        </div>\n    )\n}\n\nconst mapStateToProps = (state: any) => {\n    return {\n        databaseList: state.databaseList\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        dispatchDatabaseList: (token: string) => dispatch(getDatabaseList(token))\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Database);"]},"metadata":{},"sourceType":"module"}